var L=Object.defineProperty,ne=Object.defineProperties,ae=Object.getOwnPropertyDescriptor,ie=Object.getOwnPropertyDescriptors,ue=Object.getOwnPropertyNames,j=Object.getOwnPropertySymbols;var Z=Object.prototype.hasOwnProperty,oe=Object.prototype.propertyIsEnumerable;var Q=(s,e,t)=>e in s?L(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,h=(s,e)=>{for(var t in e||(e={}))Z.call(e,t)&&Q(s,t,e[t]);if(j)for(var t of j(e))oe.call(e,t)&&Q(s,t,e[t]);return s},A=(s,e)=>ne(s,ie(e));var ce=(s,e)=>{for(var t in e)L(s,t,{get:e[t],enumerable:!0})},se=(s,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of ue(e))!Z.call(s,n)&&n!==t&&L(s,n,{get:()=>e[n],enumerable:!(r=ae(e,n))||r.enumerable});return s};var de=s=>se(L({},"__esModule",{value:!0}),s);var De={};ce(De,{Accounts:()=>E,Articles:()=>U,CultureInfo:()=>b,Customers:()=>ee,Invoices:()=>g,Key:()=>X,LineItems:()=>f,StripePayouts:()=>P,SupplierInvoices:()=>x,TaxClass:()=>K,Verification:()=>O,Vouchers:()=>G,WcOrders:()=>m,createMapFromRecord:()=>D,formatDate:()=>V,groupBy:()=>te,removeEmojis:()=>I,sanitizeTextForFortnox:()=>v});module.exports=de(De);var le={AF:"Afghanistan",AL:"Albania",DZ:"Algeria",AR:"Argentina",AM:"Armenia",AU:"Australia",AT:"Austria",BH:"Bahrain",BD:"Bangladesh",BY:"Belarus",BE:"Belgium",BZ:"Belize",VE:"Venezuela",BO:"Bolivia",BR:"Brazil",BN:"Brunei Darussalam",BG:"Bulgaria",KH:"Cambodia",CA:"Canada","29":"Caribbean",CL:"Chile",CO:"Colombia",CR:"Costa Rica",HR:"Croatia",AZ:"Azerbaijan",BA:"Bosnia and Herzegovina",MN:"Mongolia",ME:"Montenegro",RS:"Serbia",TJ:"Tajikistan",CZ:"Czech Republic",DK:"Denmark",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",EE:"Estonia",ET:"Ethiopia",FO:"Faroe Islands",FI:"Finland",MK:"North Macedonia",FR:"France",GE:"Georgia",DE:"Germany",GP:"Guadeloupe",GR:"Greece",GL:"Greenland",GT:"Guatemala",HK:"Hong Kong",HN:"Honduras",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran",IE:"Ireland",IM:"Isle of Man",PK:"Pakistan",IL:"Israel",IT:"Italy",JE:"Jersey",JM:"Jamaica",JP:"Japan",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KR:"Sydkorea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MY:"Malaysia",MV:"Maldives",MT:"Malta",MX:"Mexico",MC:"Monaco",MA:"Morocco",NP:"Nepal",NL:"Netherlands",NZ:"New Zealand",NG:"Nigeria",NO:"Norway",OM:"Oman",PA:"Panama",PY:"Paraguay",PE:"Peru",PH:"Philippines",PL:"Poland",PT:"Portugal",CN:"China",CY:"Cyprus",PR:"Puerto Rico",QA:"Qatar",RO:"Romania",RU:"Russia",RW:"Rwanda",SA:"Saudi Arabia",SN:"Senegal",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",ZA:"South Africa",ES:"Spain",LK:"Sri Lanka",SE:"Sverige",CH:"Switzerland",SY:"Syria",TH:"Thailand",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",AE:"United Arab Emirates",UA:"Ukraine",GB:"United Kingdom",US:"United States",UY:"Uruguay",VN:"Vietnam",YE:"Yemen",ZW:"Zimbabwe"},B=le;var Y=["ES","BG","HU","LV","PL","CZ","MT","IT","SI","IE","SE","DK","FI","CY","LU","RO","EE","GR","LT","FR","HR","BE","NL","SK","DE","PT","AT"];var me=s=>Object.entries(s),pe=s=>me(s).reduce((e,[t,r])=>(e.set(t,r),e),new Map),D=pe;var M=class{static tryGetEnglishName(e){let t=this.cultures.get(e);if(!t)throw new Error(`Missing English name for country code: ${e}`);return t}static isInsideEU(e){return Y.includes(e.toUpperCase())}static tryGetCountryIso(e){if(this.cultures.has(e))return e;let t;if(Object.entries(B).forEach(([r,n])=>{e===n&&(t=r)}),!t)throw new Error(`Could not deduce Country Iso from ${e}`);return t}};M.cultures=D(B);var b=M;var fe={AT:{country:"AT",standard:{vat:.2,accountNumber:3109},reduced:{vat:.1,accountNumber:3110}},BE:{country:"BE",standard:{vat:.21,accountNumber:3111},reduced:{vat:.06,accountNumber:3112}},BG:{country:"BG",standard:{vat:.2,accountNumber:3113},reduced:{vat:.2,accountNumber:3113}},CY:{country:"CY",standard:{vat:.19,accountNumber:3115},reduced:{vat:.05,accountNumber:3116}},CZ:{country:"CZ",standard:{vat:.21,accountNumber:3117},reduced:{vat:.15,accountNumber:3118}},DE:{country:"DE",standard:{vat:.19,accountNumber:3119},reduced:{vat:.07,accountNumber:3120}},DK:{country:"DK",standard:{vat:.25,accountNumber:3121},reduced:{vat:.25,accountNumber:3121}},EE:{country:"EE",standard:{vat:.2,accountNumber:3123},reduced:{vat:.09,accountNumber:3124}},ES:{country:"ES",standard:{vat:.21,accountNumber:3125},reduced:{vat:.1,accountNumber:3126}},FI:{country:"FI",standard:{vat:.24,accountNumber:3127},reduced:{vat:.14,accountNumber:3128}},FR:{country:"FR",standard:{vat:.2,accountNumber:3129},reduced:{vat:.055,accountNumber:3130}},GR:{country:"GR",standard:{vat:.24,accountNumber:3131},reduced:{vat:.13,accountNumber:3132}},HR:{country:"HR",standard:{vat:.25,accountNumber:3133},reduced:{vat:.13,accountNumber:3134}},HU:{country:"HU",standard:{vat:.27,accountNumber:3135},reduced:{vat:.27,accountNumber:3135}},IE:{country:"IE",standard:{vat:.23,accountNumber:3137},reduced:{vat:.23,accountNumber:3137}},IT:{country:"IT",standard:{vat:.22,accountNumber:3139},reduced:{vat:.1,accountNumber:3140}},LT:{country:"LT",standard:{vat:.21,accountNumber:3141},reduced:{vat:.21,accountNumber:3141}},LU:{country:"LU",standard:{vat:.17,accountNumber:3143},reduced:{vat:.03,accountNumber:3144}},LV:{country:"LV",standard:{vat:.21,accountNumber:3145},reduced:{vat:.21,accountNumber:3145}},MT:{country:"MT",standard:{vat:.18,accountNumber:3147},reduced:{vat:0,accountNumber:3148}},NL:{country:"NL",standard:{vat:.21,accountNumber:3149},reduced:{vat:.09,accountNumber:3150}},PL:{country:"PL",standard:{vat:.23,accountNumber:3151},reduced:{vat:.23,accountNumber:3151}},PT:{country:"PT",standard:{vat:.23,accountNumber:3153},reduced:{vat:.23,accountNumber:3153}},RO:{country:"RO",standard:{vat:.19,accountNumber:3155},reduced:{vat:.09,accountNumber:3156}},SI:{country:"SI",standard:{vat:.22,accountNumber:3157},reduced:{vat:.095,accountNumber:3158}},SK:{country:"SK",standard:{vat:.2,accountNumber:3159},reduced:{vat:.2,accountNumber:3159}},SE:{country:"SE",standard:{vat:.25,accountNumber:3001},reduced:{vat:.12,accountNumber:3002}},PayPal:{standard:{vat:0,accountNumber:1940},reduced:{vat:0,accountNumber:1940}},Stripe:{standard:{vat:0,accountNumber:1580},reduced:{vat:0,accountNumber:1580}},NON_EU:{standard:{vat:0,accountNumber:3105},reduced:{vat:0,accountNumber:3105}}},q=fe;var ye={AT:{country:"AT",standard:{vat:.2,accountNumber:9109},reduced:{vat:.1,accountNumber:9110}},BE:{country:"BE",standard:{vat:.21,accountNumber:9111},reduced:{vat:.06,accountNumber:9112}},BG:{country:"BG",standard:{vat:.2,accountNumber:9113},reduced:{vat:.2,accountNumber:9113}},CY:{country:"CY",standard:{vat:.19,accountNumber:9115},reduced:{vat:.05,accountNumber:9116}},CZ:{country:"CZ",standard:{vat:.21,accountNumber:9117},reduced:{vat:.15,accountNumber:9118}},DE:{country:"DE",standard:{vat:.19,accountNumber:9119},reduced:{vat:.07,accountNumber:9120}},DK:{country:"DK",standard:{vat:.25,accountNumber:9121},reduced:{vat:.25,accountNumber:9121}},EE:{country:"EE",standard:{vat:.2,accountNumber:9123},reduced:{vat:.09,accountNumber:9124}},ES:{country:"ES",standard:{vat:.21,accountNumber:9125},reduced:{vat:.1,accountNumber:9126}},FI:{country:"FI",standard:{vat:.24,accountNumber:9127},reduced:{vat:.14,accountNumber:9128}},FR:{country:"FR",standard:{vat:.2,accountNumber:9129},reduced:{vat:.055,accountNumber:9130}},GR:{country:"GR",standard:{vat:.24,accountNumber:9131},reduced:{vat:.13,accountNumber:9132}},HR:{country:"HR",standard:{vat:.25,accountNumber:9133},reduced:{vat:.13,accountNumber:9134}},HU:{country:"HU",standard:{vat:.27,accountNumber:9135},reduced:{vat:.27,accountNumber:9135}},IE:{country:"IE",standard:{vat:.23,accountNumber:9137},reduced:{vat:.23,accountNumber:9137}},IT:{country:"IT",standard:{vat:.22,accountNumber:9139},reduced:{vat:.1,accountNumber:9140}},LT:{country:"LT",standard:{vat:.21,accountNumber:9141},reduced:{vat:.21,accountNumber:9141}},LU:{country:"LU",standard:{vat:.17,accountNumber:9143},reduced:{vat:.03,accountNumber:9144}},LV:{country:"LV",standard:{vat:.21,accountNumber:9145},reduced:{vat:.21,accountNumber:9145}},MT:{country:"MT",standard:{vat:.18,accountNumber:9147},reduced:{vat:0,accountNumber:9148}},NL:{country:"NL",standard:{vat:.21,accountNumber:9149},reduced:{vat:.09,accountNumber:9150}},PL:{country:"PL",standard:{vat:.23,accountNumber:9151},reduced:{vat:.23,accountNumber:9151}},PT:{country:"PT",standard:{vat:.23,accountNumber:9153},reduced:{vat:.23,accountNumber:9153}},RO:{country:"RO",standard:{vat:.19,accountNumber:9155},reduced:{vat:.09,accountNumber:9156}},SI:{country:"SI",standard:{vat:.22,accountNumber:9157},reduced:{vat:.095,accountNumber:9158}},SK:{country:"SK",standard:{vat:.2,accountNumber:9159},reduced:{vat:.2,accountNumber:9159}},SE:{country:"SE",standard:{vat:.25,accountNumber:2610},reduced:{vat:.12,accountNumber:2620}},PayPal:{standard:{vat:0,accountNumber:1940},reduced:{vat:0,accountNumber:1940}},Stripe:{standard:{vat:0,accountNumber:3105},reduced:{vat:0,accountNumber:3105}},NON_EU:{standard:{vat:0,accountNumber:3105},reduced:{vat:0,accountNumber:3105}}},J=ye;var X=(a=>(a.Items="Items",a.RefundedItemID="_refunded_item_id",a.SmartSendAutoGenerateReturnLabel="smart_send_auto_generate_return_label",a.SmartSendReturnMethod="smart_send_return_method",a.SmartSendShippingMethod="smart_send_shipping_method",a))(X||{}),K=(r=>(r.Empty="",r.ReducedRate="reduced-rate",r.NormalRate="normal-rate",r))(K||{});var N=class{static getTotalWithTax(e){return(parseFloat(e.total)+parseFloat(e.total_tax))/(e.quantity===0?1:e.quantity)}static getAccurateTaxTotal(e){if(!e.taxes)return 0;let t=0;return e.taxes.forEach(r=>{r.total&&(t+=parseFloat(r.total))}),t}static getGiftCards(e){return e.filter(t=>N.isGiftCard(t))}static isGiftCard(e){return e.sku.includes("GIFTCARD")}static isGiftCardSKU(e){return e.includes("GIFTCARD")}static tryVerifyRate(e,t){let r=(parseFloat(e.total_tax)/e.price).toFixed(2);if(r!==t.toFixed(2))throw new Error(`Item calculated VAT: '${r}' doesn't match expected: ${t}`)}static tryHasReducedRate(e){if(!/\b(reduced|normal)\b-rate/.test(e.tax_class)&&e.price!==0&&e.tax_class!=="")throw new Error("Tax Class of Item in Orders are only expected to have either 'normal-rate' or 'reduced-rate' if cost of item is non-zero.");return e.tax_class==="reduced-rate"}},f=N;var ge=(s,e)=>{let t=e??s.getTimezoneOffset();return s=new Date(new Date(s).getTime()-t*60*1e3),s.toISOString().split("T")[0]},V=ge;var ve=s=>{let e=/[\u00A9\u00AE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|(?:\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEF6]|\uD83E[\uDD10-\uDD1E\uDD20-\uDD27\uDD30\uDD33-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4B\uDD50-\uDD5E\uDD80-\uDD91\uDDC0])/g;return s.replace(e,()=>"")},I=ve;var he=s=>{let e={"\u2013":"-","~":"-","{":"(","}":")","[":"(","]":")","^":" ","|":"-","\xB7":"-"};return s.replace(/u650|·/,"").replace(/[[\]^{|}~–]/g,t=>e[t])},v=he;var S=s=>typeof s=="string"?parseFloat(s):s;var p=class{static tryVerifyOrder(e){if(!e.prices_include_tax)throw new Error(`Unexpected: 'prices_include_tax' is ${!1}, expected: true`)}static getFilteredMetaDataByKeys(e,t){return e.filter(r=>t.includes(r.key))}static tryCreatePaymentFeeExpense(e,t,r){let n=p.tryGetPaymentFee(e,r);if(!n||n<=0||n>=parseFloat(e.total))throw new Error(`Unexpected fee amount for '${r}': ${n}`);return{Code:{PayPal:"PAPLFE",Stripe:"STRPFE"}[r],Text:`Betalningsavgift: ${e.id} via ${r}`,Account:6570,Debit:n,Currency:p.tryGetCurrency(e),CurrencyRate:p.tryVerifyCurrencyRate(e,t)}}static hasGiftCardsRedeem(e){let{gift_cards:t}=e;return Array.isArray(t)&&(t==null?void 0:t.length)>0}static tryGetGiftCardsPurchases(e){let t=f.getGiftCards(e.line_items),r=t.length>0,n=0;return r&&(n=p.tryGetAccurateTotal(e)),{hasGiftCards:r,amountCurrency:n,containsOnlyGiftCards:r&&n===parseFloat(e.total),giftCards:t}}static tryGetPaymentFee(e,t){var a,i,u;let r,n=(o,c)=>o.find(d=>d.key===c);if(t==="Stripe"?r=parseFloat((a=n(e.meta_data,"_stripe_fee"))==null?void 0:a.value):t==="PayPal"&&(e.payment_method.includes("ppcp-gateway")?r=parseFloat(((i=n(e.meta_data,"_ppcp_paypal_fees"))==null?void 0:i.value).paypal_fee.value):r=parseFloat((u=n(e.meta_data,"_paypal_transaction_fee"))==null?void 0:u.value)),!r)throw new Error(`Missing '${t}' Payment Fee.`);return r}static hasPaymentFee(e,t){let r=p.tryGetPaymentFee(e,t);return typeof r=="number"&&r>0}static getShippingTotal(e){return typeof e.shipping_total=="string"?parseFloat(e.shipping_total):e.shipping_total}static getShippingTax(e){return typeof e.shipping_tax=="string"?parseFloat(e.shipping_tax):e.shipping_tax}static tryGetPaymentMethod(e){let{payment_method:t,payment_method_title:r}=e;if(/^Stripe$|^PayPal$/.test(r))return r;if(/^stripe\S*/i.test(t))return"Stripe";if(/^\S*paypal$/i.test(t))return"PayPal";let{created_via:n,total:a,gift_cards:i}=e;if(parseFloat(a)===0&&i&&i.length>0)return"GiftCard";throw/admin|checkout/i.test(n)?new Error(`Order was created manually by '${n}'.`):new Error(`Unexpected Payment Method: '${t}', '${e.payment_method_title}. Order was created by '${n}'`)}static hasPaymentMethod(e){try{p.tryGetPaymentMethod(e)}catch{return!1}return!0}static tryGetAccurateTotal(e,t=1e-13){let r=0;if(parseFloat(e.total)===0)return 0;e.line_items.forEach(a=>{r+=a.price*a.quantity+f.getAccurateTaxTotal(a)}),r+=p.getShippingTotal(e)+p.getShippingTax(e);let n=Math.abs(r-parseFloat(e.total));if(n>t){let a=`WooCommerce order ${e.id} total does not match calculated total. Difference: WooCommerce: ${e.total}, calculated: ${r} = ${n}`;if(n>=.01)throw new Error(a)}return r}static tryVerifyStripePayout(e,t){let r=this.getCurrencyRateFromStripeMetaData(t.fee,t.net,this.tryGetAccurateTotal(e));if(r!==t.exchange_rate)throw new Error(`Calculated Currency Rate: ${r} does not match Stripe 'exchange_rate' : ${t.exchange_rate}`)}static tryVerifyCurrencyRate(e,t){let{currency:r}=e;if(!["EUR","USD","SEK"].includes(r))throw new Error(`Unexpected Currency: '${r}', expected: EUR, USD or SEK.`);if(r==="SEK"&&t===1||["EUR","USD"].includes(r)&&t>8.5&&t<11.5)return t;throw new Error(`Unexpected Currency Rate for Currency: '${r}' - Currency Rate: ${t}`)}static tryGetCurrency(e){if(!/SEK|EUR|USD/.test(e.currency))throw new Error(`Unexpected Currency: '${e.currency}', expected: SEK, EUR or USD.`);return e.currency}static getCurrencyRateFromStripeMetaData(e,t,r){return(S(e)+S(t))/r}static getRefunds(e){return Object.prototype.hasOwnProperty.call(e.refunds,"amount")?e.refunds.length>0?e.refunds:void 0:e.refunds}static isPartiallyRefunded(e){return e.status==="completed"&&(e.meta_data.some(t=>t.key==="_stripe_refund_id")||e.refunds.length>0&&e.refunds.reduce((t,r)=>t+parseFloat(r.total??"0"),0)!==0)}static tryGetCurrencyRate(e,t,r,n){var d,y;let a=p.tryGetPaymentMethod(e);if(a!=="Stripe")throw new Error(`Findus can only deduce Currency Rate with Stripe payments. Unsupported payment method: ${a} - ${e.payment_method_title}`);if(e.meta_data.some(l=>l.key==="_stripe_refund_id")||e.refunds.length>0&&e.refunds.reduce((l,C)=>l+parseFloat(C.total??"0"),0)!==0)throw new Error("Cannot deduce Stripe Currency Rate if Order is partially refunded.");let i=(d=e.meta_data.find(l=>l.key==="_stripe_charge_captured"))==null?void 0:d.value,u=(y=e.meta_data.find(l=>l.key==="_stripe_currency"))==null?void 0:y.value;if(!i||parseFloat(i)<=0)throw new Error(`Unexpected: Order 'meta_data' of key '_stripe_charge_captured' has value '${i}' `);if(!t||S(t)<=0)throw new Error(`Invalid value of stripeNet: ${t}`);if(!r||S(r)<0)throw new Error(`Invalid value of stripeNet: ${r}`);if(!u)throw new Error(`Unexpected: Order 'meta_data' of key '_stripe_currency' has value '${u}' `);if(u!=="SEK")throw new Error(`Stripe Payment with currency: ${u} is unexpected.`);if(`${e.currency}-${u}`=="SEK-SEK")return 1;let o=n??p.tryGetAccurateTotal(e),c=this.getCurrencyRateFromStripeMetaData(t,r,o);try{p.tryVerifyCurrencyRate(e,c)}catch(l){throw new Error(`Failed to verify calculated Currency Rate for Stripe payment: ${c}, ${l}`)}return c}static verifyRateForItem(e,t,r){if(t.vat===0)return{vat:0,label:"0% Vat"};let n=p.tryGetTaxRateLabels(e.tax_lines),a;if(Object.is(n.standard,n.reduced))a=n.standard;else{if(r.tax_class==="")throw new Error(`Unexpected empty tax class for item: '${r.name}', expected either 'normal-rate' or 'reduced-rate'`);a=r.tax_class!=="reduced-rate"?n.standard:n.reduced}if(t.vat!==a.vat)throw new Error(`VAT Rate miss-match, expected value: ${t.vat} VAT, but WooCommerce gave: ${a.vat}% VAT, with label: ${a.label}`);return a}static getTaxRate(e){let t=e.label;try{let n=/(?:\d+(?:\.\d*)?|\.\d+)%/.exec(t);if(!n||n.length!==1)throw new Error(`Could not parse VAT Percentage from Tax Label: ${t}`);return parseFloat(n[0])/100}catch{throw new Error(`Unexpected Tax label: ${t}`)}}static tryGetTaxRateLabels(e){let t=[];return e.forEach(r=>{var i;let n=p.getTaxRate(r),a={vat:n,label:r.label};if(!a)throw new Error("Missing tax label");((i=t[0])==null?void 0:i.vat)>=n?t.push(a):t=[a,...t]}),{standard:t[0],reduced:t[1]}}static getDocumentSource(e){var t;return(t=e.meta_data.find(r=>r.key==="pdf_invoice_source"))==null?void 0:t.value}static getStorefrontUrl(e){var t;return(t=e.meta_data.find(r=>r.key==="storefront_url"))==null?void 0:t.value}static getStorefrontPrefix(e){var t;return(t=e.meta_data.find(r=>r.key==="storefront_prefix"))==null?void 0:t.value}static createDocumentLink(e,t,r){return`${t}/wp-admin/admin-ajax.php?action=generate_wpo_wcpdf&template_type=invoice&order_ids=${e}&order_key=${r}`}static tryGetDocumentLink(e,t){var a,i;let r=(a=e.meta_data.find(u=>u.key==="_wcpdf_document_link"))==null?void 0:a.value;if(r&&r!=="")return r;let n=(i=e.meta_data.find(u=>u.key==="_wc_order_key"))==null?void 0:i.value;if(n||(n=e.order_key),!n)throw new Error("Order is missing document_link and order_key");if(!t){let u=p.getStorefrontUrl(e);if(!u)throw new Error("Could not get 'storefront_url' from order meta_data");let o=e.id;return typeof o=="string"&&o.includes("-")&&(o=o.split("-")[1]),this.createDocumentLink(o,u,n)}return`${t}/wp-admin/admin-ajax.php?action=generate_wpo_wcpdf&template_type=invoice&order_ids=${e.id}&order_key=${n}`}static tryGetInvoiceReference(e){var r;if(!e.meta_data)return 0;let t=(r=e.meta_data.find(n=>n.key==="_fortnox_invoice_number"))==null?void 0:r.value;if(!t)throw new Error("Order is missing '_fortnox_invoice_number' referenced in meta data.");return parseInt(t,10)}static tryCanBeRefunded(e){var t;if(e.status==="completed"&&((t=e.refunds)==null?void 0:t.length)===0)throw new Error("Order status is 'completed' but has no partial refunds.");if(e.status!=="refunded")throw new Error(`Unexpected order status: '${e.status}', expected full refund 'refunded' or partial refund 'completed'.`);return!0}static tryGetCustomerName(e){let t;try{t=this.tryGetBillingName(e)}catch{try{t=this.tryGetDeliveryName(e)}catch{throw new Error("Order is missing customer name for 'billing' and failed to fallback to 'shipping'")}}if(!t)throw new Error("Missing customer name for order");return v(t)}static tryGetDeliveryName(e){if(e.shipping.first_name||e.shipping.last_name)return I(`${e.shipping.first_name} ${e.shipping.last_name}`).trim();throw new Error("Order is missing customer name for shipping")}static tryGetBillingName(e){if(e.billing.first_name||e.billing.last_name)return I(`${e.billing.first_name} ${e.billing.last_name}`).trim();throw new Error("Order is missing customer name for billing")}static tryGetCustomerEmail(e){if(e.billing.email)return e.billing.email;throw new Error("Order is missing customer email in billing.")}static tryGetCustomerAddresses(e){let t=(a,i)=>a&&a.length>10&&(i&&(a=a.replace(i,"")),a.length>10)?a.slice(0,10):a,r=b.tryGetCountryIso(e.billing.country),n=b.tryGetCountryIso(e.shipping.country);if(!r)throw new Error("Failed to create customer, failed to determine 'order.billing.country'");if(!n)throw new Error("Failed to create customer, failed to determine 'order.shipping.country'");return{CountryCode:r,DeliveryCountryCode:n,Address1:v(e.billing.address_1),Address2:v(e.billing.address_2),ZipCode:t(e.billing.postcode,e.shipping.city),City:v(e.billing.city),DeliveryName:v(p.tryGetDeliveryName(e)),DeliveryAddress1:v(e.shipping.address_1),DeliveryAddress2:v(e.shipping.address_2),DeliveryZipCode:t(e.shipping.postcode,e.shipping.city),DeliveryCity:v(e.shipping.city)}}},_=p;_.getMetaDataValueByKey=(e,t)=>{var r;return(r=(Array.isArray(e)?e:e.meta_data).find(({key:n})=>n===t))==null?void 0:r.value},_.hasInvoiceReference=e=>e.meta_data.findIndex(({key:t})=>t==="_fortnox_invoice_reference")!==-1,_.getInvoiceReference=e=>p.getMetaDataValueByKey(e.meta_data,"_fortnox_invoice_reference"),_.getPaymentDate=e=>new Date(e.date_paid).toLocaleDateString("sv-SE");var m=_;var H=class{static getRate(e,t=!1,r){let n=this.tryGetSalesAccount(e,r);return t?n.reduced??n.standard:n.standard}static tryGetSalesAccountForOrder(e){let t=e.billing.country,r=m.tryGetPaymentMethod(e);return this.tryGetSalesAccount(t,r)}static tryGetSalesRateForItem(e,t){let r=H.tryGetSalesAccountForOrder(e);return f.tryHasReducedRate(t)?r.reduced??r.standard:r.standard}static tryGetSalesAccount(e,t){if(this.sales.has(e)){let n=this.sales.get(e);if(!n)throw new Error(`Missing Sales Account for country: ${e}`);return n}if(!b.isInsideEU(e))return this.sales.get("NON_EU");if(!t)throw new Error(`Payment Method is required for orders outside EU: ${e}`);let r=this.sales.get(t);if(!r)throw new Error(`Missing Sales Account for Payment Method: ${t}`);return r}static getVatAccount(e,t){if(this.vat.has(e)){let n=this.vat.get(e);if(!n)throw new Error(`Missing VAT Account for country: ${e}`);return n}if(!t)throw new Error(`Payment Method is required for orders outside EU: ${e}`);let r=this.vat.get(t);if(!r)throw new Error(`Missing VAT Account for Payment Method: ${t}`);return r}},T=H;T.vat=D(J),T.sales=D(q);var E=T;var w=class{static sanitizeTextForFortnox(e){let t={"\u2013":"-","~":"-","{":"(","}":")","[":"(","]":")","^":" ","|":"-"};return e.replace(/[[\]^{|}~–]/g,r=>t[r])}static createArticles(e){let t=[];for(let r of e.line_items)t.push(w.createArticle(r));return t}static createArticle(e){return{ArticleNumber:e.sku,Description:w.sanitizeTextForFortnox(e.name),Type:"STOCK"}}},U=w;var F=class{static getCustomerVatType(e){let t=b.tryGetCountryIso(e);return b.isInsideEU(t)?/se/i.test(t)?"SEVAT":"EUVAT":"EXPORT"}static tryCreateCustomer(e,t=!0){let r,n;try{r=m.tryGetCustomerAddresses(e),n=F.getCustomerVatType(r.DeliveryCountryCode)}catch(a){if(t)throw new Error(a.message)}return h({Name:m.tryGetCustomerName(e),Type:"PRIVATE",Email:m.tryGetCustomerEmail(e),VATType:n},r)}},ee=F;var g=class{static tryCanBeRefunded(e){if(e.Cancelled===!0)throw new Error("Invoice has already been Cancelled.");if(e.Booked===!0)throw new Error("Invoice has not been Booked in Fortnox.");if(e.CreditInvoiceReference)throw new Error("Invoice has an existing Credit Invoice");return!0}static tryGetInvoiceCurrencyAmount(e){let t=0;if(e.InvoiceRows.forEach(r=>{t+=r.Price*(r.DeliveredQuantity??1)}),e.Total&&e.Total!==t)throw new Error(`Calculated Total: ${t} of Invoice does not match Fortnox assigned total: ${e.Total}`);if(t===0)throw new Error("Unexpected zero value total for Invoice");return t}static tryCreateInvoicePayment(e,t,r,n){let a=g.tryGetInvoiceCurrencyAmount(e),i=t??e.CurrencyRate;if(!/completed|refunded|partial refund/.test(n))throw new TypeError(`Invalid value for paymentStatus: ${n}`);if(!i)throw new TypeError("Missing Currency Rate for Invoice Payment.");return{InvoiceNumber:e.DocumentNumber,Amount:a*i,AmountCurrency:a,PaymentDate:V(r),CurrencyRate:i,Currency:e.Currency,PaymentStatus:n}}static tryGetHighestVATAccount(e){let t,r;if(e.InvoiceRows.forEach(n=>{(!t||n.VAT&&n.VAT>t)&&(t=n.VAT,r=n.AccountNumber)}),!t||!r)throw new Error(`Failed to find valid VAT or AccountNumber for Invoice ${e.DocumentNumber??""}`);return{VAT:t,AccountNumber:r}}static tryCreateRefundObject(e,t){let r=[];for(let n of t){let{reason:a,id:i}=n,u={items:[],reason:a,id:i.toString()},o=0,c=0;if(o=parseFloat(n.amount),o<=0)throw new Error(`Unexpected Refund Amount: ${o}, expected to be a positive number for refund: '${a}'`);let d=l=>{if(l.AccountNumber===void 0)throw new Error(`Unexpected missing AccountNumber for InvoiceRow Item: ${l.ArticleNumber}, for refund: '${a}'`);if(l.VAT===void 0)throw new Error(`Unexpected missing AccountNumber for InvoiceRow Item: ${l.ArticleNumber}, for refund: '${a}'`);if(l.DeliveredQuantity===void 0)throw new Error(`Unexpected missing DeliveredQuantity for InvoiceRow Item: ${l.ArticleNumber}, for refund: '${a}'`);return{ArticleNumber:l.ArticleNumber,AccountNumber:l.AccountNumber,VAT:l.VAT,DeliveredQuantity:l.DeliveredQuantity,Price:l.Price}},y=g.tryGetHighestVATAccount(e);if(n.reason==="Refund Shipping")for(let l of e.InvoiceRows)l.ArticleNumber.startsWith("Shipping")&&(u.items.push(d(l)),c+=l.Price);else{if(/discount/i.test(a))throw new Error(`Missing Implementation, for refund: '${a}'`);for(let l of e.InvoiceRows)if(l.Price>0)for(let C of n.line_items){let R=-f.getTotalWithTax(C);if(C.sku===l.ArticleNumber){if(-R!==l.Price)throw new Error(`Refund amount missmatch for ${l.ArticleNumber}, expected ${l.Price}, got ${-R}, for refund: '${a}'`);u.items.push(d(l)),c+=-R}}}if(Math.abs(o-c)>1e-7)throw new Error(`Invalid Refund amount, expected: ${o}, got: ${c}, for refund: '${a}'`);u.items.length>0&&r.push(u)}return r.length>0?r:void 0}static tryCreatePartialRefund(e,t){var n,a;if(e.Credit===!1||!e.InvoiceRows||!(((n=e.InvoiceRows)==null?void 0:n.length)>=0))throw new Error("Credit Invoice for Partial refund is invalid.");let r=e.InvoiceRows;e.InvoiceRows=[];for(let i of t){let u=!Object.prototype.hasOwnProperty.call(i,"amount"),o=0,c=0;if(u?o=parseFloat(i.total):o=parseFloat(i.amount),t.length===1&&u)if(i.reason==="Refund Shipping")for(let d of r)d.ArticleNumber.startsWith("Shipping")&&(e.InvoiceRows.push(d),c+=d.Price);else throw/discount/i.test(i.reason)?new Error("Missing Implementation"):new Error(`Unexpected refund: ${i.reason}`);else for(let d of r)if(d.Price>0)for(let y of i.line_items){let l=f.getTotalWithTax(y);if(y.sku===d.ArticleNumber&&l===-d.Price){let C=f.tryHasReducedRate(y),R=f.isGiftCard(y),z=parseFloat(y.total_tax)>0,$=d.VAT,k=d.AccountNumber,W=e.DeliveryCountry??e.Country;if(!W||W==="")throw new Error(`Credit Invoice is missing valid Country for VAT: ${W}`);let re=b.tryGetCountryIso(W);if({vat:$,accountNumber:k}=R?{vat:0,accountNumber:2421}:E.getRate(re,C),$*100!==d.VAT||k!==d.AccountNumber||z&&$>0)throw new Error(`Wrong calculated VAT for refunded Item in Credit Invoice: ${$}%, ${k}, expected ${d.VAT}%, ${d.AccountNumber}${z?"":". VAT should be 0% in both cases"}`);(a=e.InvoiceRows)==null||a.push(d),c+=l}}if(-c!==o)throw new Error(`Invalid Refund amount: -${c}, expected: ${o}`)}return e}static tryCreateRefundedCreditInvoice(e,t){let r=[];for(let n of t){let a=parseFloat(n.amount),i=0;for(let u of n.line_items)e.InvoiceRows.forEach(o=>{if(u.sku===o.ArticleNumber){let c=-(parseFloat(u.total)+parseFloat(u.total_tax));if(c>0){let d=Math.round(c/o.Price),y=c/d;if(d*y!==c)throw new Error(`Calculated Item Price of ${y}, is inaccurate, ${d} * ${y} !== ${c}`);i+=c,r.push(A(h({},o),{Price:y,DeliveredQuantity:-d}))}}});if(Math.abs(i-a)>1e-6)throw new Error(`Failed to create Refund, expected: ${a}, but instead got: ${i}`)}return A(h({},e),{InvoiceRows:r})}static tryCreateFullRefund(e,t){let r=[];return e.line_items.forEach(n=>{let a=f.getTotalWithTax(n);if(a>0){let i=E.tryGetSalesRateForItem(e,n);r.push({ArticleNumber:n.sku,DeliveredQuantity:-n.quantity,AccountNumber:i.accountNumber,Price:a})}}),A(h({},t),{InvoiceRows:r})}static tryGenerateCashPaymentInvoice(e,t,r=!1){let n=m.tryGetPaymentMethod(e),a=b.tryGetEnglishName(e.billing.country),i;r||(i=b.tryGetEnglishName(e.shipping.country));let u=new Date(e.date_paid).toLocaleDateString("sv-SE"),o=n==="Stripe"?"INVOICE":"CASHINVOICE",c=n==="Stripe"?void 0:"CASH",d=`${t}-${e.id}`;return{InvoiceDate:u,DueDate:u,InvoiceType:o,PaymentWay:c,TermsOfPayment:"0",Currency:m.tryGetCurrency(e),Country:a,DeliveryCountry:i,VATIncluded:!0,YourOrderNumber:d}}static tryGenerateInvoiceRows(e,t,r){let n=[],a={vat:-1,accountNumber:-1};e.line_items.sort((i,u)=>u.price-i.price);for(let i of e.line_items){let u=f.tryHasReducedRate(i),{vat:o,accountNumber:c}=f.isGiftCard(i)?{vat:0,accountNumber:2421}:E.getRate(e.billing.country,u,t);i.price>0&&o>a.vat&&(a={vat:o,accountNumber:c}),n.push({AccountNumber:c,VAT:parseFloat((o*100).toString().slice(0,16)),ArticleNumber:i.sku,Description:U.sanitizeTextForFortnox(i.name),DeliveredQuantity:i.quantity,Price:f.getTotalWithTax(i)})}if(a.vat===-1)throw new Error("Could not determine VAT of items in order.");return g.tryAddShippingCost(n,e,a),g.tryAddGiftCardExpense(n,e),g.tryAddRounding(n,e,r),n}static tryAddPaymentFeeCost(e,t,r,n){var o;let a;m.tryVerifyCurrencyRate(t,r);let i,u;if(n==="Stripe"){let c=(o=t.meta_data.find(d=>d.key==="_stripe_currency"))==null?void 0:o.value;if(c!=="SEK")throw new Error(`Unxepected Currency for Stripe Charge: ${c}`);a=m.tryGetPaymentFee(t,n),u=a/r}else{if(i=m.tryGetCurrency(t),a=m.tryGetPaymentFee(t,n)*r,i==="SEK"){if(r!==1)throw new Error(`Invalid SEK Currency Rate for PayPal Payment Fee: ${r}`)}else if(r===1)throw new Error(`Non SEK Currency: ${i}, for PayPal Payment Fee expected valid Currency rate.`);u=a/r}e.push({AccountNumber:6570,ArticleNumber:`PaymentFee.${n}`,Description:`Payment Fee: ${t.id} via ${n}`,DeliveredQuantity:1,Price:-u})}static hasGiftCardRedeem(e){return e.InvoiceRows.some(t=>t.ArticleNumber.includes("GIFTCARD-REDEEM"))}static tryAddRounding(e,t,r){let{total:n}=t,a=.05,i=.01,u=(r??m.tryGetAccurateTotal(t,a))-parseFloat(n);if(u!==0){if(Math.abs(u)>a)throw new Error(`Unexpected rounding ${u}, expected total: ${r??m.tryGetAccurateTotal(t,a)}, order total: ${n}`);Math.abs(u)>i&&e.push({AccountNumber:3740,ArticleNumber:"ROUNDING",Description:"Rounding",DeliveredQuantity:1,Price:u})}}static tryCreateGiftCardRedeemArticles(e,t=!1){let r=[];if(e.InvoiceRows.forEach(n=>{let{ArticleNumber:a,Description:i}=n;a.includes("GIFTCARD-REDEEM")&&r.push({ArticleNumber:a,Description:i??""})}),r.length===0){if(t)return[];throw new Error("Invoice is missing expected Gift Card Redeem")}return r}static tryAddGiftCardExpense(e,t){let{gift_cards:r}=t;if(!m.hasGiftCardsRedeem(t))return;let n=m.getMetaDataValueByKey(t,"_storefront_prefix");r==null||r.forEach(a=>{let{code:i}=a;e.push({AccountNumber:2421,ArticleNumber:`${n?`${n}.`:""}GIFTCARD-REDEEM.${i}`,Description:`${n?`${n} - `:""}Gift Card Redeem: ${i}`,Price:-a.amount,DeliveredQuantity:1})})}static tryAddShippingCost(e,t,r){let n=m.getShippingTotal(t);if(n===0)return;let a=m.getShippingTax(t),i=Math.abs(a/n);if(i-r.vat>.001){let u=i<r.vat;if(r=E.getRate(t.billing.country,u),i-r.vat>.001)throw new Error(`Shipping Rate Missmatch: ${i*100}% VAT, expected ${r.vat*100}% VAT`)}e.push({AccountNumber:r.accountNumber,ArticleNumber:"Shipping.Cost",Description:"Fraktkostnad",DeliveredQuantity:1,Price:n+a,VAT:r.vat*100})}static tryCreateInvoice(e,t,r,n="completed",a){if(e.status!==n)throw new Error(`Unexpected order status: '${e.status}'`);if(!e.billing.email)throw new Error("Order is missing customer email in 'billing'");let{containsOnlyGiftCards:i}=m.tryGetGiftCardsPurchases(e),u=m.tryGetPaymentMethod(e);return A(h({},this.tryGenerateCashPaymentInvoice(e,r,i)),{InvoiceDate:m.getPaymentDate(e),CurrencyRate:m.tryVerifyCurrencyRate(e,t),InvoiceRows:g.tryGenerateInvoiceRows(e,u,a)})}};var P=class{static tryGetOrderId(e,t){let{description:r}=e;if(/refund/i.test(r))return"";let n=/(\d{4,})$/m.exec(r);if(!n)throw new Error(`Failed to get Order Id from Payout description: ${r}`);let a=n[0];if(t)return`${t}-${a}`;if(r.includes("Gamerbulk"))return`GB-${a}`;if(r.includes("NAU Shop"))return`ND-${a}`;throw new Error(`Invalid Provider for Stripe Payout: ${r}`)}static tryVerifyStripePayout(e,t){var r,n,a;try{let{exchange_rate:i}=t;if(Math.abs(parseFloat(e.total)*(i??1)-parseFloat(t.gross))>.1)throw new Error(`Order total '${parseFloat(e.total)*(i??1)}' does not match Stripe Payout gross: '${t.gross}'`);let u=parseFloat((r=e.meta_data.find(({key:d})=>d==="_stripe_fee"))==null?void 0:r.value),o=parseFloat((n=e.meta_data.find(({key:d})=>d==="_stripe_net"))==null?void 0:n.value),c=(a=e.meta_data.find(({key:d})=>d==="_stripe_currency"))==null?void 0:a.value;if(u!==parseFloat(t.fee))throw new Error(`Order Stripe Fee '${u}' does not match Stripe Payout Fee: '${t.fee}'`);if(o!==parseFloat(t.net))throw new Error(`Order Stripe Net '${o}' does not match Stripe Payout Net: '${t.net}'`);if(c!==t.currency.toUpperCase())throw new Error(`Order Stripe Currency '${c}' does not match Stripe Payout Currency: '${t.currency.toUpperCase()}'`)}catch(i){throw new Error(`Failed to verify Stripe Payout: ${i.message}`)}}};var x=class{static tryCreateBasicSupplierInvoice(e,t,r){let n=m.tryGetPaymentMethod(e),a=new Date(e.date_paid).toLocaleDateString("sv-SE");if(r===100)throw new Error("Placeholder");return{InvoiceNumber:e.id,Currency:t,InvoiceDate:a,DueDate:a,SupplierNumber:n==="PayPal"?"54":"55",SalesType:"STOCK",SupplierInvoiceRows:[]}}static tryCreatePaymentFeeInvoice(e,t=1){var u;let r=m.tryGetPaymentMethod(e);if(r==="GiftCard")throw new Error("Cannot create payment fee for Gift Card purchases");let n=m.tryCreatePaymentFeeExpense(e,t,r),a;if(r==="Stripe"){let o=(u=e.meta_data.find(c=>c.key==="_stripe_currency"))==null?void 0:u.value;if(o!=="SEK")throw new Error(`Unxepected Currency for Stripe Charge: ${o}`);a="SEK",t=1}else if(a=m.tryGetCurrency(e),a==="SEK"){if(t!==1)throw new Error(`Invalid SEK Currency Rate for Supplier Invoice: ${t}`)}else if(t===1)throw new Error(`Non SEK Currency: ${a}, for '${r}' fee, Supplier Invoice expects valid Currency rate`);let i=x.tryCreateBasicSupplierInvoice(e,a,t);return i.Total=n.Debit,i}};function te(s,e){let t=new Map;return s.forEach(r=>{let n=e(r),a=t.get(n);a?a.push(r):t.set(n,[r])}),t}var O=class{static tryCreateVerification(e,t,r=!1){let n=[];if(te(e.InvoiceRows,a=>a.AccountNumber).forEach((a,i)=>{let u=0,o;a.forEach(c=>{u+=c.Price*(c.DeliveredQuantity??1),o||(o=c.Description)}),n.push({Account:i,Debit:0,Credit:parseFloat(u.toFixed(8)),TransactionInformation:o})}),r&&!t)throw new Error("Order missing for Verification with optional Payment Fee.");return n.sort((a,i)=>!a.Account||!i.Account?0:a.Account<5e3?i.Account-a.Account:a.Account-i.Account)}};var G=class{static tryCreateVoucherForPaymentFee(e,t,r,n){var o;m.tryVerifyCurrencyRate(e,t);let a,i=n??m.tryGetPaymentMethod(e),u=m.tryGetPaymentFee(e,i);if(i==="Stripe"){let c=(o=e.meta_data.find(d=>d.key==="_stripe_currency"))==null?void 0:o.value;if(c!=="SEK")throw new Error(`Unxepected Currency for Stripe Charge: ${c}`);a=u}else a=u*t;return{Description:`Payment Fee: ${r}-${e.id} via ${i}`,TransactionDate:m.getPaymentDate(e),VoucherSeries:"B",VoucherRows:[{Account:i==="PayPal"?1940:1930,Debit:0,Credit:a},{Account:6570,Debit:a,Credit:0}]}}};0&&(module.exports={Accounts,Articles,CultureInfo,Customers,Invoices,Key,LineItems,StripePayouts,SupplierInvoices,TaxClass,Verification,Vouchers,WcOrders,createMapFromRecord,formatDate,groupBy,removeEmojis,sanitizeTextForFortnox});
//# sourceMappingURL=index.js.map
